#include <iostream>
#include <fstream>
#include <string>
#include <vector>
#include <iomanip>
void introFunction();
void readFile(std::string[], double[], const int);
void menuFunction(int &);
void sortNumbers(double[], int);
double swap(double &, double &);
void totalAverage(double[], int);
void sortNumbers(double[], int);
double swap(double &, double &);
int binarySearch(const std::vector<std::string>&, std::string);

int main() {
    const int SIZE = 100;
    std::string names[SIZE];
    double earning[SIZE];
    int choice = 0;                     //for user menu.
    double total = 0.0;
    double average = 0.0;
    double num1 = 0.0;                  //num1 and num2 for swap function.
    double num2 = 0.0;
    double minIndex = 0.0;
    double maxIndex = 0.0;
    std::string nameID = {" "};     //to hold string value in binarySearch function.
    int result;


    introFunction();
    std::cout << std::endl;
    readFile(names, earning, SIZE);
    do
        {

     menuFunction(choice);
     if (choice == 1) {
             sortNumbers(earning, SIZE);

         swap(num1, num2);

         std::cout << "The first player in the Top 100 list is: " << names[1] << std::endl;
         std::cout << "The total winnings for this player: $" << earning[1] << std::endl;
         std::cout << std::endl;
         std::cout << "The last player in the Top 100 list is: " << names[0] << std::endl;
         std::cout << "The total winnings for this player: $" << earning[0] << std::endl;
         std::cout <<std::endl;
     }
            else if (choice == 2) {
         totalAverage(earning, SIZE);
     }
            else if(choice == 3) {
         std::string temp = "";
         std::vector<std::string>theVector;

         std::vector<std::string>loadvector(theVector);

         int position;

         std::cout <<"Enter the Player ID you wish to search for: "<<std::endl;
         std::cin >> temp;
         position = binarySearch(loadvector, temp);

         if (position != -1)
             std::cout <<"That player is NOT in the Top 100" << std::endl;
         else
             std::cout <<"That player is in the Top 100!"<< std::endl;

     }
            else
                std::cout <<"Hope you enjoyed this program!";
                std::cout <<std::endl;

     } while (choice < 4);

    return 0;
}
//introduction function.
void introFunction() {
    std::cout << "This program will help you get information about the Top 100 Fortnite \n"
                 "Players\n"
                 "The data was compiled from 366 tournaments. Range: 2/27/2018 - \n"
                 "7/16/2019\n"
                 "Player rank is based on total winnings from these tournaments\n"
                 "Source: https://www.esportsearnings.com/games/534-fortnite/top-players" << std::endl;
}

void readFile(std::string name[], double winning[], const int ARRAYSIZE){
    std::ifstream iFile;
    int count = 0;

    iFile.open("/media/linuxgorilla/5f8be082-3ff7-4e6b-b17b-107de17361cf/C++/Project3/fortnite.txt");

    while(count < ARRAYSIZE && iFile >> name[count] >> winning[count]){
        std::cout << name[count] << " " << winning[count] << std::endl;
        count++;
    }
}
void menuFunction(int & select)
    {

        std::cout << "Enter the number from the choices below:\n"
                     "(1) Show the #1 and #100 player + winnings\n"
                     "(2) Show Total and Average winnings\n"
                     "(3) Find a player in Top 100 by ID\n"
                     "(4) EXIT THIS PROGRAM" << std::endl;
        std::cout << "Enter your choice: " << std::endl;
        std::cin >> select;
        while (select < 1 || select > 4) {
            std::cout << "That is an incorrect choice. Please try again. " << std::endl;
            std::cin >> select;
        }
    }
//sort and swap functions
void sortNumbers(double array[], int size) {
    int maxNum;
    int index;
    for (maxNum = size - 1; maxNum > 0; maxNum--) {
        for (index = 0; index < maxNum; index++) {
            if (array[index] > array[index + 1]) {
                swap(array[index], array[index + 1]);
            }
        }
    }
}
double swap(double &a, double &b) {

    double temp = a;
    a = b;
    b = temp;
}
void totalAverage(double winningNums[], const int size)
{
    double total = 0.0;
    double average = 0.0;

    for(int i = 0; i < size; i++)
    {
        total += winningNums[i];
    }
    average = total/size;
    std::cout << "Total winnings of all Top 100 players is: $" << total << std::endl;
    std::cout << std::endl;
    std::cout << "Average winnings of Top 100 players is: " << average << std::endl;
    std::cout << std::endl;
}

int binarySearch(const std::vector<std::string> &v, std::string str) {
        int first = 0;
        int last = v.size() - 1;
        int middle;
        int position = -1;
        bool found = false;

        while (!found && first <= last) {
            middle = (first + last) / 2;
            if (v[middle] == str) {
                found = true;
                position = middle;
            } else if (v[middle] > str)
                last = middle - 1;
            else
                first = middle + 1;
        }
        return position;
    }

